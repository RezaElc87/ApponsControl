import "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\prsht.idl";
import "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\mshtml.idl";
import "c:\program files (x86)\microsoft sdks\windows\v7.0a\include\dimm.idl";
import "c:\program files (x86)\microsoft sdks\windows\v7.0a\include\dispex.idl";
import "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\mshtmhst.idl";
import "c:\program files (x86)\microsoft sdks\windows\v7.0a\include\docobj.idl";
import "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\exdisp.idl";
import "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\include\objsafe.idl";

[
	object,
	uuid(5A79B1CB-FF34-4F4F-A394-4972066A5763),
	dual,
	helpstring("IDTDisplayControl Interface"),
	pointer_default(unique)
] 
#line 15 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
interface IDTDisplayControl : IDispatch {
#line 18 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	[propput,bindable,requestedit,id(-500)] HRESULT  AutoSize([in] VARIANT_BOOL vbool);
#line 20 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	[propget,bindable,requestedit,id(-500)] HRESULT  AutoSize([out,retval] VARIANT_BOOL *pbool);
#line 22 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	[propput,bindable,requestedit,id(-519)] HRESULT  BorderVisible([in] VARIANT_BOOL vbool);
#line 24 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	[propget,bindable,requestedit,id(-519)] HRESULT  BorderVisible([out,retval] VARIANT_BOOL *pbool);
	[propget,id(1),helpstring("property Object")] HRESULT  Object([out,retval] IUnknown **pVal);
};

[
	object,
	uuid(7C13A54F-69C0-4F51-A48D-F55CE086F72D),
	dual,
	helpstring("IDTDetector Interface"),
	pointer_default(unique)
] 
#line 18 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdetector.h"
interface IDTDetector : IDispatch {
#line 20 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdetector.h"
	[propget,id(1),helpstring("property IPAddress")] HRESULT  IPAddress([out,retval] BSTR *pVal);
	[propput,id(1),helpstring("property IPAddress")] HRESULT  IPAddress([in] BSTR newVal);
	[propget,id(2),helpstring("property CmdPort")] HRESULT  CmdPort([out,retval] LONG *pVal);
	[propput,id(2),helpstring("property CmdPort")] HRESULT  CmdPort([in] LONG newVal);
	[propget,id(3),helpstring("property SerialPort")] HRESULT  SerialPort([out,retval] LONG *pVal);
	[propput,id(3),helpstring("property SerialPort")] HRESULT  SerialPort([in] LONG newVal);
	[propget,id(4),helpstring("property ObjectHandle")] HRESULT  ObjectHandle([out,retval] IUnknown **pVal);
	[propget,id(5),helpstring("property IsOpened")] HRESULT  IsOpened([out,retval] LONG *pVal);
	[propget,id(6),helpstring("property LastErrID")] HRESULT  LastErrID([out,retval] LONG *pVal);
	[propget,id(7),helpstring("property ChannelType")] HRESULT  ChannelType([out,retval] LONG *pVal);
	[propput,id(7),helpstring("property ChannelType")] HRESULT  ChannelType([in] LONG newVal);
	[propget,id(8),helpstring("property BaudRate")] HRESULT  BaudRate([out,retval] LONG *pVal);
	[propput,id(8),helpstring("property BaudRate")] HRESULT  BaudRate([in] LONG newVal);
	[propget,id(9),helpstring("property CmdTimeOut")] HRESULT  CmdTimeOut([out,retval] LONG *pVal);
	[propput,id(9),helpstring("property CmdTimeOut")] HRESULT  CmdTimeOut([in] LONG newVal);
	[id(10),helpstring("method Open")] HRESULT  Open([out,retval] LONG *bOK);
	[id(11),helpstring("method Close")] HRESULT  Close();
	[id(12),helpstring("method SendCommand")] HRESULT  SendCommand([in]BSTR bstrCmd, [out] BSTR *bstrRTMsg, [out,retval] LONG *bOK);
	[id(13),helpstring("method PrintErrMsg")] HRESULT  PrintErrMsg([in] LONG ErrID, [out] BSTR *ErrMsg);
	[id(14),helpstring("method SendCommandA")] HRESULT  SendCommandA([in] CHAR *Cmd, [out] CHAR *pRT, [out,retval] LONG *bOK);
};

[
	object,
	uuid(A164B205-1A1E-4345-A6F6-38D4715EC7FB),
	dual,
	helpstring("IDTCommanderF3 Interface"),
	pointer_default(unique)
] 
#line 17 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
interface IDTCommanderF3 : IDispatch {
#line 19 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
	[propget,id(1),helpstring("property DetectorObject")] HRESULT  DetectorObject([out,retval] IUnknown **pVal);
	[propput,id(1),helpstring("property DetectorObject")] HRESULT  DetectorObject([in] IUnknown *newVal);
	[id(2),helpstring("method OffBoardCalibration")] HRESULT  OffBoardCalibration([in] LONG CalibrationType, [in] IUnknown *pImgObject, [in] LONG StartPixel, [in] LONG EndPixel, [in] LONG TargetValue);
#line 23 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
	[propget,id(3),helpstring("property Gain")] HRESULT  Gain([in] LONG Index, [out,retval] FLOAT *pVal);
	[propput,id(3),helpstring("property Gain")] HRESULT  Gain([in] LONG Index, [in] FLOAT newVal);
	[propget,id(4),helpstring("property Offset")] HRESULT  Offset([in] LONG Index, [out,retval] LONG *pVal);
	[propput,id(4),helpstring("property Offset")] HRESULT  Offset([in] LONG Index, [in] LONG newVal);
	[propget,id(5),helpstring("property CorrectionGain")] HRESULT  CorrectionGain([out,retval] LONG *pVal);
	[propput,id(5),helpstring("property CorrectionGain")] HRESULT  CorrectionGain([in] LONG newVal);
	[propget,id(6),helpstring("property CorrectionOffset")] HRESULT  CorrectionOffset([out,retval] LONG *pVal);
	[propput,id(6),helpstring("property CorrectionOffset")] HRESULT  CorrectionOffset([in] LONG newVal);
	[propget,id(7),helpstring("property CorrectionBaseline")] HRESULT  CorrectionBaseline([out,retval] LONG *pVal);
	[propput,id(7),helpstring("property CorrectionBaseline")] HRESULT  CorrectionBaseline([in] LONG newVal);
	[propget,id(8),helpstring("property Baseline")] HRESULT  Baseline([out,retval] LONG *pVal);
	[propput,id(8),helpstring("property Baseline")] HRESULT  Baseline([in] LONG newVal);
	[propget,id(9),helpstring("property IntegrationTime")] HRESULT  IntegrationTime([out,retval] LONG *pVal);
	[propput,id(9),helpstring("property IntegrationTime")] HRESULT  IntegrationTime([in] LONG newVal);
	[propget,id(10),helpstring("property AverageFilter")] HRESULT  AverageFilter([out,retval] LONG *pVal);
	[propput,id(10),helpstring("property AverageFilter")] HRESULT  AverageFilter([in] LONG newVal);
	[propget,id(11),helpstring("property DataPattern")] HRESULT  DataPattern([out,retval] LONG *pVal);
	[propput,id(11),helpstring("property DataPattern")] HRESULT  DataPattern([in] LONG newVal);
	[propget,id(12),helpstring("property FrameTrigger")] HRESULT  FrameTrigger([out,retval] LONG *pVal);
	[propput,id(12),helpstring("property FrameTrigger")] HRESULT  FrameTrigger([in] LONG newVal);
	[propget,id(13),helpstring("property LineTrigger")] HRESULT  LineTrigger([out,retval] LONG *pVal);
	[propput,id(13),helpstring("property LineTrigger")] HRESULT  LineTrigger([in] LONG newVal);
	[id(14),helpstring("method Initialize")] HRESULT  Initialize([in] LONG Mode);
	[id(15),helpstring("method SaveOffset")] HRESULT  SaveOffset();
	[id(16),helpstring("method SaveGain")] HRESULT  SaveGain([in] LONG Index);
	[id(17),helpstring("method LoadOffset")] HRESULT  LoadOffset();
	[id(18),helpstring("method LoadGain")] HRESULT  LoadGain([in] LONG Index);
	[propget,id(19),helpstring("property OutputBits")] HRESULT  OutputBits([out,retval] LONG *pVal);
	[propput,id(19),helpstring("property OutputBits")] HRESULT  OutputBits([in] LONG newVal);
	[id(20),helpstring("method SendExFrameTrigger")] HRESULT  SendExFrameTrigger();
	[propget,id(21),helpstring("property FrameOut")] HRESULT  FrameOut([out,retval] LONG *pVal);
	[propput,id(21),helpstring("property FrameOut")] HRESULT  FrameOut([in] LONG newVal);
	[propget,id(22),helpstring("property ImageOutputType")] HRESULT  ImageOutputType([out,retval] LONG *pVal);
	[propput,id(22),helpstring("property ImageOutputType")] HRESULT  ImageOutputType([in] LONG newVal);
	[propget,id(23),helpstring("property SensitivityLevel")] HRESULT  SensitivityLevel([out,retval] LONG *pVal);
	[propput,id(23),helpstring("property SensitivityLevel")] HRESULT  SensitivityLevel([in] LONG newVal);
	[propget,id(24),helpstring("property SumLines")] HRESULT  SumLines([out,retval] LONG *pVal);
	[propput,id(24),helpstring("property SumLines")] HRESULT  SumLines([in] LONG newVal);
	[id(25),helpstring("method WriteDataPattern")] HRESULT  WriteDataPattern([in] LONG Base, [in] LONG Step);
	[propget,id(26),helpstring("property IsOpened")] HRESULT  IsOpened([out,retval] LONG *pVal);
	[propget,id(27),helpstring("property ModuleTypeNmae")] HRESULT  ModuleTypeName([out,retval] BSTR *pVal);
	[id(28),helpstring("method SaveCurrentStatus")] HRESULT  SaveCurrentStatus();
	[propget,id(29),helpstring("property PixelSize")] HRESULT  PixelSize([out,retval] FLOAT *pVal);
	[propget,id(30),helpstring("property PixelNumber")] HRESULT  PixelNumber([out,retval] LONG *pVal);
	[propget,id(31),helpstring("property ModuleType")] HRESULT  ModuleType([out,retval] LONG *pVal);
	[propget,id(32),helpstring("property MaxIntTime")] HRESULT  MaxIntTime([out,retval] LONG *pVal);
	[propget,id(33),helpstring("property MinIntTime")] HRESULT  MinIntTime([out,retval] LONG *pVal);
	[propget,id(34),helpstring("property OverallGain")] HRESULT  OverallGain([out,retval] FLOAT *pVal);
	[propput,id(34),helpstring("property OverallGain")] HRESULT  OverallGain([in] FLOAT newVal);
	[propget,id(35),helpstring("property StartPixel")] HRESULT  StartPixel([out,retval] LONG *pVal);
	[propput,id(35),helpstring("property StartPixel")] HRESULT  StartPixel([in] LONG newVal);
	[propget,id(36),helpstring("property EndPixel")] HRESULT  EndPixel([out,retval] LONG *pVal);
	[propput,id(36),helpstring("property EndPixel")] HRESULT  EndPixel([in] LONG newVal);
	[id(37),helpstring("method OnBoardOffsetCalibration")] HRESULT  OnBoardOffsetCalibration();
	[id(38),helpstring("method OnBoardGainCalibration")] HRESULT  OnBoardGainCalibration([in] LONG TargetValue);
	[id(39),helpstring("method ResetGain")] HRESULT  ResetGain();
	[id(40),helpstring("method ResetOffset")] HRESULT  ResetOffset();
	[propget,id(41),helpstring("property FPGA_Version")] HRESULT  FPGA_Version([out,retval] LONG *pVal);
	[propget,id(42),helpstring("property FPGA_Build")] HRESULT  FPGA_Build([out,retval] LONG *pVal);
	[propget,id(43),helpstring("property MCU_Version")] HRESULT  MCU_Version([out,retval] LONG *pVal);
#line 84 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
	[propget,id(44),helpstring("property SerialNumber")] HRESULT  SerialNumber([out,retval] BSTR *pVal);
	[id(45),helpstring("method RetrieveSysinfo")] HRESULT  RetrieveSysinfo();
};

[
	object,
	uuid(564FBD53-2CF3-47D8-AD62-670840E804BE),
	dual,
	helpstring("IImageObject Interface"),
	pointer_default(unique)
] 
#line 15 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\imageobject.h"
interface IImageObject : IDispatch {
#line 17 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\imageobject.h"
	[propget,id(1),helpstring("property ImageDataAddress")] HRESULT  ImageDataAddress([out,retval] LONG *pVal);
	[propput,id(1),helpstring("property ImageDataAddress")] HRESULT  ImageDataAddress([in] LONG newVal);
	[propget,id(2),helpstring("property Width")] HRESULT  Width([out,retval] LONG *pVal);
	[propget,id(3),helpstring("property Height")] HRESULT  Height([out,retval] LONG *pVal);
	[propget,id(4),helpstring("property BytesPerPixel")] HRESULT  BytesPerPixel([out,retval] LONG *pVal);
	[propget,id(5),helpstring("property Pixel")] HRESULT  Pixel([in] LONG X, [in] LONG Y, [out,retval] LONG *pVal);
	[propput,id(5),helpstring("property Pixel")] HRESULT  Pixel([in] LONG X, [in] LONG Y, [in] LONG newVal);
	[id(6),helpstring("method Open")] HRESULT  Open([in] LONG Width, [in] LONG Height, [in] LONG BytesPerPixel);
	[propget,id(7),helpstring("property ImageLineAddress")] HRESULT  ImageLineAddress([in] LONG LineIndex, [out,retval] LONG *pVal);
	[id(8),helpstring("method ColAverage")] HRESULT  ColAverage([out] LONG *pAvg);
	[id(9),helpstring("method ColMax")] HRESULT  ColMax([out] LONG *pMax);
	[id(10),helpstring("method ColMin")] HRESULT  ColMin([out] LONG *pMin);
	[id(11),helpstring("method RowMin")] HRESULT  RowMin([out] LONG *pMin);
	[id(12),helpstring("method RowMax")] HRESULT  RowMax([out] LONG *pMax);
	[id(13),helpstring("method RowAverage")] HRESULT  RowAverage([in]LONG *pAvg);
	[id(14),helpstring("method ColNoise")] HRESULT  ColNoise([out] FLOAT *pNoise);
	[id(15),helpstring("method RowNoise")] HRESULT  RowNoise([out] FLOAT *pNoise);
	[id(16)] HRESULT  DoRowStatistic();
	[id(17)] HRESULT  DoColStatistic();
};

[
	object,
	uuid(C22B30FA-860F-4565-8BDC-FC90EFC56F96),
	dual,
	helpstring("IDTDisplay Interface"),
	pointer_default(unique)
] 
#line 23 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
interface IDTDisplay : IDispatch {
#line 25 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[propget,id(1),helpstring("property Width")] HRESULT  ImgWidth([out,retval] ULONG *pVal);
	[propput,id(1),helpstring("property Width")] HRESULT  ImgWidth([in] ULONG newVal);
	[propget,id(2),helpstring("property Height")] HRESULT  ImgHeight([out,retval] ULONG *pVal);
	[propput,id(2),helpstring("property Height")] HRESULT  ImgHeight([in] ULONG newVal);
#line 30 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[propget,id(3),helpstring("property Gamma")] HRESULT  Gamma([out,retval] FLOAT *pVal);
	[propput,id(3),helpstring("property Gamma")] HRESULT  Gamma([in] FLOAT newVal);
	[propget,id(4),helpstring("property MapStart")] HRESULT  MapStart([out,retval] LONG *pVal);
	[propput,id(4),helpstring("property MapStart")] HRESULT  MapStart([in] LONG newVal);
	[propget,id(5),helpstring("property MapEnd")] HRESULT  MapEnd([out,retval] LONG *pVal);
	[propput,id(5),helpstring("property MapEnd")] HRESULT  MapEnd([in] LONG newVal);
#line 37 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[propget,id(6),helpstring("property DataSource")] HRESULT  DataSource([out,retval] IUnknown **pVal);
	[propput,id(6),helpstring("property DataSource")] HRESULT  DataSource([in] IUnknown *newVal);
	[propget,id(7),helpstring("property DisplayControl")] HRESULT  DisplayControl([out,retval] IUnknown **pVal);
	[propput,id(7),helpstring("property DisplayControl")] HRESULT  DisplayControl([in] IUnknown *newVal);
#line 42 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[id(8),helpstring("method Open")] HRESULT  Open([out,retval] LONG *bOK);
	[id(9),helpstring("method Close")] HRESULT  Close();
#line 45 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[propget,id(10),helpstring("property RefreshMode")] HRESULT  RefreshMode([out,retval] LONG *pVal);
	[propput,id(10),helpstring("property RefreshMode")] HRESULT  RefreshMode([in] LONG newVal);
	[propget,id(11),helpstring("property RefreshRate")] HRESULT  RefreshRate([out,retval] LONG *pVal);
	[propput,id(11),helpstring("property RefreshRate")] HRESULT  RefreshRate([in] LONG newVal);
	[propget,id(12),helpstring("property ImageObject")] HRESULT  ImageObject([out,retval] IUnknown **pVal);
	[propget,id(13),helpstring("property DisplayScale")] HRESULT  DisplayScale([out,retval] LONG *pVal);
	[propput,id(13),helpstring("property DisplayScale")] HRESULT  DisplayScale([in] LONG newVal);
#line 53 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	[id(14),helpstring("method Refresh")] HRESULT  Refresh();
	[propget,id(15),helpstring("property OrgPoint_X")] HRESULT  OrgPoint_X([out,retval] LONG *pVal);
	[propput,id(15),helpstring("property OrgPoint_X")] HRESULT  OrgPoint_X([in] LONG newVal);
	[propget,id(16),helpstring("property OrgPoint_Y")] HRESULT  OrgPoint_Y([out,retval] LONG *pVal);
	[propput,id(16),helpstring("property OrgPoint_Y")] HRESULT  OrgPoint_Y([in] LONG newVal);
	[id(17),helpstring("method Load")] HRESULT  Load([in]BSTR FilePath);
	[id(18),helpstring("method Save")] HRESULT  Save([in]BSTR FilePath);
	[propget,id(19),helpstring("property ObjectHandle")] HRESULT  ObjectHandle([out,retval] IUnknown **pVal);
	[id(20),helpstring("method Repaint")] HRESULT  Repaint();
};

[
	object,
	uuid(05A512FA-9E1F-4F7D-BE82-6FBECE81A17D),
	dual,
	helpstring("IDTImage Interface"),
	pointer_default(unique)
] 
#line 29 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
interface IDTImage : IDispatch {
#line 31 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
	[propget,id(1),helpstring("property ImgHeight")] HRESULT  ImgHeight([out,retval] LONG *pVal);
	[propput,id(1),helpstring("property ImgHeight")] HRESULT  ImgHeight([in] LONG newVal);
	[propget,id(2),helpstring("property ImgWidth")] HRESULT  ImgWidth([out,retval] LONG *pVal);
	[propput,id(2),helpstring("property ImgWidth")] HRESULT  ImgWidth([in] LONG newVal);
	[propget,id(3),helpstring("property BytesPerPixel")] HRESULT  BytesPerPixel([out,retval] LONG *pVal);
	[propput,id(3),helpstring("property BytesPerPixel")] HRESULT  BytesPerPixel([in] LONG newVal);
	[propget,id(4),helpstring("property CardType")] HRESULT  ChannelType([out,retval] LONG *pVal);
	[propput,id(4),helpstring("property CardType")] HRESULT  ChannelType([in] LONG newVal);
	[propget,id(5),helpstring("property ImagePort")] HRESULT  ImagePort([out,retval] LONG *pVal);
	[propput,id(5),helpstring("property ImagePort")] HRESULT  ImagePort([in] LONG newVal);
	[propget,id(6),helpstring("property DetectorObject")] HRESULT  DetectorObject([out,retval] IUnknown **pVal);
	[propput,id(6),helpstring("property DetectorObject")] HRESULT  DetectorObject([in] IUnknown *newVal);
	[propget,id(7),helpstring("property IsOpened")] HRESULT  IsOpened([out,retval] LONG *pVal);
	[propget,id(8),helpstring("property LastErrID")] HRESULT  LastErrID([out,retval] LONG *pVal);
	[id(9),helpstring("method Open")] HRESULT  Open([out,retval] LONG *bOK);
	[id(10),helpstring("method Close")] HRESULT  Close();
	[id(11),helpstring("method Grab")] HRESULT  Grab([in] LONG FrameNum, [out,retval] LONG *bOK);
	[id(12),helpstring("method Snap")] HRESULT  Snap([in] LONG FrameNum, [out,retval] LONG *bOK);
	[id(13),helpstring("method PrintErrMsg")] HRESULT  PrintErrMsg([in] LONG ErrID, [out] BSTR *ErrMsg);
#line 51 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
	[propget,id(15),helpstring("property SubFrameHeight")] HRESULT  SubFrameHeight([out,retval] LONG *pVal);
	[propput,id(15),helpstring("property SubFrameHeight")] HRESULT  SubFrameHeight([in] LONG newVal);
	[id(16),helpstring("method Stop")] HRESULT  Stop();
	[propget,id(17),helpstring("property IsGrabing")] HRESULT  IsGrabing([out,retval] LONG *pVal);
	[propget,id(18),helpstring("property ImageObject")] HRESULT  ImageObject([out,retval] IUnknown **pVal);
	[propget,id(19),helpstring("property BandWidth")] HRESULT  BandWidth([out,retval] LONG *pVal);
	[propget,id(20),helpstring("property ObjectHandle")] HRESULT  ObjectHandle([out,retval] IUnknown **pVal);
	[propget,id(21),helpstring("property TimeOut")] HRESULT  TimeOut([out,retval] LONG *pVal);
	[propput,id(21),helpstring("property TimeOut")] HRESULT  TimeOut([in] LONG newVal);
	[propget,id(22),helpstring("property ExFrameTrigger")] HRESULT  ExFrameTrigger([out,retval] LONG *pVal);
	[propput,id(22),helpstring("property ExFrameTrigger")] HRESULT  ExFrameTrigger([in] LONG newVal);
	[propget,id(23)] HRESULT  DualScanMode([out,retval] LONG *pVal);
	[propput,id(23)] HRESULT  DualScanMode([in] LONG newVal);
	[id(24)] HRESULT  OpenMemImage([in]LONG width, [in]LONG height, [in]BYTE *data);
#line 67 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
	[propget,id(25)] HRESULT  OffsetEnable([out,retval] BYTE *pVal);
	[propput,id(25)] HRESULT  OffsetEnable([in] BYTE newVal);
	[propget,id(26)] HRESULT  GainEnable([out,retval] BYTE *pVal);
	[propput,id(26)] HRESULT  GainEnable([in] BYTE newVal);
	[propget,id(27)] HRESULT  PixelOrderEnable([out,retval] BYTE *pVal);
	[propput,id(27)] HRESULT  PixelOrderEnable([in] BYTE newVal);
	[id(28)] HRESULT  OffsetCalibration();
	[id(29)] HRESULT  GainCalibration([in]LONG target);
	[id(30)] HRESULT  GainCalSnap();
	[id(31)] HRESULT  GainArrayCal();
	[propget,id(32)] HRESULT  arrayCorrectionEnable([out,retval] BYTE *pVal);
	[propput,id(32)] HRESULT  arrayCorrectionEnable([in] BYTE newVal);
};


[ version(1.0), uuid(2ABB9428-C448-4099-AB86-8E3EDDF45F5A), helpstring("DTControl 1.0 Type Library") ]
library DTControl
{
	importlib("stdole2.tlb");
	importlib("olepro32.dll");

	[
		uuid(51F345B5-044F-49F2-A824-59B2869CEF23),
		helpstring("_IDTDisplayControlEvents Interface")
	] 
#line 37 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	dispinterface _IDTDisplayControlEvents {
	properties:

	methods:
	};

	[
		version(1.0),
		uuid(14B6C482-806F-4171-AEA4-FB424E07A758),
		helpstring("DTDisplayControl Class")
	] 
#line 54 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\displaycontrol.h"
	coclass CDTDisplayControl {
		interface IDTDisplayControl;
		[default, source]	interface _IDTDisplayControlEvents;
	};

	[
		uuid(B3E172CD-8F54-4910-AA06-61B8D3ECD986),
		helpstring("_IDTDetectorEvents Interface")
	] 
#line 51 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdetector.h"
	dispinterface _IDTDetectorEvents {
	properties:

	methods:
		[id(1),helpstring("method DTError")] HRESULT  DTError([in] LONG ErrorID, [in] BSTR ErrorInfo);
	};

	[
		version(1.0),
		uuid(81B889F3-33FC-40CD-A98B-4487723F5A3B),
		helpstring("DTDetector Class")
	] 
#line 69 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdetector.h"
	coclass CDTDetector {
		interface IDTDetector;
		[default, source]	interface _IDTDetectorEvents;
	};

	[
		uuid(3F2A6451-EC6C-4948-9C07-7764FA64A894),
		helpstring("_IDTCommanderF3Events Interface")
	] 
#line 97 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
	dispinterface _IDTCommanderF3Events {
	properties:

	methods:
	};

	[
		version(1.0),
		uuid(B08859A2-D75E-4B6D-8C13-A80DAD7BA087),
		helpstring("DTCommanderF3 Class")
	] 
#line 114 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtcommander.h"
	coclass CDTCommanderF3 {
		interface IDTCommanderF3;
		[default, source]	interface _IDTCommanderF3Events;
	};

	[
		version(1.0),
		uuid(25874CDE-5C8A-486D-855D-C8DE1FFBEE8A),
		helpstring("ImageObject Class")
	] 
#line 52 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\imageobject.h"
	coclass CImageObject {
		interface IImageObject;
	};

	[
		uuid(CD1AAF81-A669-47B7-94A0-5A2A1FBA4439),
		helpstring("_IDTDisplayEvents Interface")
	] 
#line 73 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	dispinterface _IDTDisplayEvents {
	properties:

	methods:
		[id(1),helpstring("method MouseMove")] HRESULT  MouseMove([in] LONG X, [in] LONG Y, [in] LONG Value);
	};

	[
		version(1.0),
		uuid(F984B792-41DB-4D78-95A7-1C80E40938FD),
		helpstring("DTDisplay Class")
	] 
#line 91 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtdisplay.h"
	coclass CDTDisplay {
		interface IDTDisplay;
		[default, source]	interface _IDTDisplayEvents;
	};

	[
		uuid(41BE7653-30F4-461F-87A1-4BAB1F8C8B33),
		helpstring("_IDTImageEvents Interface")
	] 
#line 90 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
	dispinterface _IDTImageEvents {
	properties:

	methods:
		[id(1),helpstring("method FrameReady")] HRESULT  FrameReady([in] LONG NumLines);
		[id(2),helpstring("method SubFrameReady")] HRESULT  SubFrameReady([in] LONG NumOfBlockLeft, [in] LONG StartLine, [in] LONG NumLines, [in] LONG bLastBlock);
		[id(3),helpstring("method Datalost")] HRESULT  Datalost([in]LONG LostlineNum);
		[id(4),helpstring("method DTError")] HRESULT  DTError([in] LONG ErrorID, [in] BSTR ErrorInfo);
	};

	[
		version(1.0),
		uuid(137E0C10-17BC-4F16-BFFE-5C1E7725C8EA),
		helpstring("DTImage Class")
	] 
#line 113 "c:\\users\\yizheng\\documents\\github\\apponscontrol\\apponsdetector\\dtimage.h"
	coclass CDTImage {
		interface IDTImage;
		[default, source]	interface _IDTImageEvents;
	};

}

